{"ast":null,"code":"var _jsxFileName = \"/home/l00xy/Documents/Coding/Web development/CodingPractice/react_project/github-finder/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport './App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null); //Search Github users\n\n  const searchUsers = async text => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUsers(res.data.items);\n    setLoading(false);\n  }; // Get single Github user\n\n\n  const getUser = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setUser(res.data);\n    setLoading(false);\n  }; //  Get users repos\n\n\n  const getUserRepos = async username => {\n    setLoading(true);\n    const res = await axios.get(`https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    setRepos(res.data);\n    setLoading(false);\n  }; //  clear users from state\n\n\n  const clearUsers = () => {\n    setUser([]);\n    setLoading(false);\n  }; // Set Alert\n\n\n  const showAlert = (msg, type) => {\n    showAlert({\n      msg,\n      type\n    });\n    showTimeout(() => showAlert(null), 5000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          alert: alert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Search, {\n                searchUsers: searchUsers,\n                clearUsers: clearUsers,\n                showClear: users.length > 0 ? true : false,\n                setAlert: showAlert\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Users, {\n                loading: loading,\n                users: users\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            Component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/user/:login\",\n            render: props => /*#__PURE__*/_jsxDEV(User, { ...props,\n              getUser: getUser,\n              getUserRepos: getUserRepos,\n              user: user,\n              repos: repos,\n              loading: loading\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/3fm6y2NlTv42AKSqhiCdntXFhU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/l00xy/Documents/Coding/Web development/CodingPractice/react_project/github-finder/src/App.js"],"names":["React","Fragment","useState","BrowserRouter","Router","Switch","Route","Navbar","Users","User","Search","Alert","About","axios","App","users","setUsers","user","setUser","repos","setRepos","loading","setLoading","alert","setAlert","searchUsers","text","res","get","process","env","REACT_APP_GITHUB_CLIENT_ID","REACT_APP_GITHUB_CLIENT_SECRET","data","items","getUser","username","getUserRepos","clearUsers","showAlert","msg","type","showTimeout","props","length"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Users from './components/users/Users';\nimport User from './components/users/User';\nimport Search from './components/users/Search';\nimport Alert from './components/layout/Alert';\nimport About from './components/pages/About';\nimport './App.css';\nimport axios from 'axios';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [alert, setAlert] = useState(null);\n\n  //Search Github users\n  const searchUsers = async (text) => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setUsers(res.data.items);\n    setLoading(false);\n  };\n\n  // Get single Github user\n\n  const getUser = async (username) => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setUser(res.data);\n    setLoading(false);\n  };\n\n  //  Get users repos\n\n  const getUserRepos = async (username) => {\n    setLoading(true);\n\n    const res = await axios.get(\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n    );\n\n    setRepos(res.data);\n    setLoading(false);\n  };\n\n  //  clear users from state\n\n  const clearUsers = () => {\n    setUser([]);\n    setLoading(false);\n  };\n\n  // Set Alert\n\n  const showAlert = (msg, type) => {\n    showAlert({ msg, type });\n\n    showTimeout(() => showAlert(null), 5000);\n  };\n\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar />\n        <div className='container'>\n          <Alert alert={alert} />\n          <Switch>\n            <Route\n              exact\n              path='/'\n              render={(props) => (\n                <Fragment>\n                  <Search\n                    searchUsers={searchUsers}\n                    clearUsers={clearUsers}\n                    showClear={users.length > 0 ? true : false}\n                    setAlert={showAlert}\n                  />\n                  <Users loading={loading} users={users} />\n                </Fragment>\n              )}\n            />\n            <Route exact path='/about' Component={About} />\n            <Route\n              exact\n              path='/user/:login'\n              render={(props) => (\n                <User\n                  {...props}\n                  getUser={getUser}\n                  getUserRepos={getUserRepos}\n                  user={user}\n                  repos={repos}\n                  loading={loading}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}